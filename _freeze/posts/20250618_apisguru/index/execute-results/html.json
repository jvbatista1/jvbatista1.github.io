{
  "hash": "67676d3e489d87bc3047e44ec0243525",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"APIs Guru\"\ndescription: \"Uma iniciativa para construir uma Wikipedia de APIs\"\nauthor:\n  - name: Victor Batista\n    url: https://jvbatista1.github.io/\n    langid: pt\ndate: 06/18/2025\ncategories: [Tidytuesday] # self-defined categories\ncitation: \n  url: https://jvbatista1.github.io/posts/20250618_apisguru/ \nimage: apis_guru.svg\ndraft: true # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\n---\n\n\nNo [Tidytuesday](https://github.com/rfordatascience/tidytuesday/blob/main/data/2025/2025-06-17/readme.md){target=\"_blank\"} dessa semana investigamos algumas tabelas da [APIs Guru](https://apis.guru/about/){target=\"_blank\"}, que é uma iniciativa OpenSource de criar uma Wikipedia machine-readable de API disponíveis publicamente, gratuitamente ou não. O resposável pela organização dessa semana [Jon Harmon](https://github.com/jonthegeek) tem criado um [livro](https://dslc-io.github.io/club-wapir/) sobre APIs no R e uma [série de pacotes](https://beekeeper.api2r.org) para trabalhar com essas ferramentas.\n\nHoje farei a análise em Python.\n\n## Baixando os dados e exploração inicial\n\n::: {#3e186212 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\napi_info = pd.read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-06-17/api_info.csv')\napi_categories = pd.read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-06-17/api_categories.csv')\napi_logos = pd.read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-06-17/api_logos.csv')\napi_origins = pd.read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-06-17/api_origins.csv')\napisguru_apis = pd.read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-06-17/apisguru_apis.csv')\n```\n:::\n\n\nDando uma olhada nas tabelas disponibililzadas, quero me concentrar em especial na tabela `api_info`, pois ela tem a variável `provider_name`, o que me permite checar quais são os principais fornecedores de APIs.\n\n::: {#d11b6d34 .cell execution_count=2}\n``` {.python .cell-code}\napi_logos\napi_categories\napi_origins\napisguru_apis\napi_info\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>contact_name</th>\n      <th>contact_url</th>\n      <th>description</th>\n      <th>title</th>\n      <th>provider_name</th>\n      <th>service_name</th>\n      <th>license_name</th>\n      <th>license_url</th>\n      <th>terms_of_service</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1forge.com</td>\n      <td>1Forge</td>\n      <td>http://1forge.com</td>\n      <td>Stock and Forex Data and Realtime Quotes</td>\n      <td>1Forge Finance APIs</td>\n      <td>1forge.com</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1password.com:events</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1Password Events API Specification.</td>\n      <td>Events API</td>\n      <td>1password.com</td>\n      <td>events</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1password.local:connect</td>\n      <td>1Password Integrations</td>\n      <td>https://support.1password.com/</td>\n      <td>REST API interface for 1Password Connect.</td>\n      <td>1Password Connect</td>\n      <td>1password.local</td>\n      <td>connect</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6-dot-authentiqio.appspot.com</td>\n      <td>Authentiq team</td>\n      <td>http://authentiq.io/support</td>\n      <td>Strong authentication, without the passwords.</td>\n      <td>Authentiq API</td>\n      <td>6-dot-authentiqio.appspot.com</td>\n      <td>NaN</td>\n      <td>Apache 2.0</td>\n      <td>http://www.apache.org/licenses/LICENSE-2.0.html</td>\n      <td>http://authentiq.com/terms/</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ably.io:platform</td>\n      <td>Ably Support</td>\n      <td>https://www.ably.io/contact</td>\n      <td>The [REST API specification](https://www.ably....</td>\n      <td>Platform API</td>\n      <td>ably.io</td>\n      <td>platform</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2524</th>\n      <td>zeno.fm</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Aggregators API</td>\n      <td>Aggregators API Service</td>\n      <td>zeno.fm</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2525</th>\n      <td>zenoti.com</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Our API documentation has been moved to https:...</td>\n      <td>Zenoti API</td>\n      <td>zenoti.com</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2526</th>\n      <td>zoom.us</td>\n      <td>Zoom Developers</td>\n      <td>https://developer.zoom.us/</td>\n      <td>The Zoom API allows developers to access infor...</td>\n      <td>Zoom API</td>\n      <td>zoom.us</td>\n      <td>NaN</td>\n      <td>MIT for OAS 2.0</td>\n      <td>https://opensource.org/licenses/MIT</td>\n      <td>https://zoom.us/docs/en-us/zoom_api_license_an...</td>\n    </tr>\n    <tr>\n      <th>2527</th>\n      <td>zoomconnect.com</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>The world's greatest SMS API</td>\n      <td>www.zoomconnect.com</td>\n      <td>zoomconnect.com</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2528</th>\n      <td>zuora.com</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>\\n\\n# Introduction\\n\\nWelcome to the reference...</td>\n      <td>API Reference: Billing</td>\n      <td>zuora.com</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>2529 rows × 10 columns</p>\n</div>\n```\n:::\n:::\n\n\n## Quantos APIs os provedores fornecem?\n\n::: {#cccb3ba1 .cell execution_count=3}\n``` {.python .cell-code}\napi_info['provider_name'].value_counts().reset_index().head(n=50)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>provider_name</th>\n      <th>count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>azure.com</td>\n      <td>653</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>googleapis.com</td>\n      <td>281</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>amazonaws.com</td>\n      <td>271</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>apisetu.gov.in</td>\n      <td>181</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>twilio.com</td>\n      <td>44</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>sportsdata.io</td>\n      <td>35</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>vtex.local</td>\n      <td>34</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>amadeus.com</td>\n      <td>32</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>adyen.com</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>ebay.com</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>nexmo.com</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>interzoid.com</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>github.com</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>microsoft.com</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>apideck.com</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>mastercard.com</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>hubapi.com</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>fungenerators.com</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>parliament.uk</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>nytimes.com</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>gov.bc.ca</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>ote-godaddy.com</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>epa.gov</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>codat.io</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>xero.com</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>deutschebahn.com</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>letmc.com</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>rapidapi.com</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>whapi.com</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>amentum.space</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>ndhm.gov.in</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>npr.org</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>import.io</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>openbanking.org.uk</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>vonage.com</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>wmata.com</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>haloapi.com</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>mercedes-benz.com</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>va.gov</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>walmart.com</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>40</th>\n      <td>docker.com</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>funtranslations.com</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>42</th>\n      <td>onsched.com</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>tomtom.com</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>presalytics.io</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>mailboxvalidator.com</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>seldon.local</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>hsbc.com</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>ticketmaster.com</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>49</th>\n      <td>apache.org</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nEm outra oportunidade, como parte do meu interesse por OpenSource, quero verificar como o tipo de licença interagem com o perifl da API disponibilizada.\n\n::: {#b56924ec .cell execution_count=4}\n``` {.python .cell-code}\ncontagem = api_info[['provider_name', 'license_name']].value_counts().reset_index()\n\ncontagem\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>provider_name</th>\n      <th>license_name</th>\n      <th>count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>googleapis.com</td>\n      <td>Creative Commons Attribution 3.0</td>\n      <td>281</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>amazonaws.com</td>\n      <td>Apache 2.0 License</td>\n      <td>271</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>twilio.com</td>\n      <td>Apache 2.0</td>\n      <td>44</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ebay.com</td>\n      <td>eBay API License Agreement</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>interzoid.com</td>\n      <td>Interzoid license</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>178</th>\n      <td>whapi.com</td>\n      <td>William Hill Online</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>179</th>\n      <td>wowza.com</td>\n      <td>Terms of Use</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>180</th>\n      <td>xtrf.eu</td>\n      <td>Apache 2.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>181</th>\n      <td>yodlee.com</td>\n      <td>Yodlee Developer License</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>182</th>\n      <td>zoom.us</td>\n      <td>MIT for OAS 2.0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>183 rows × 3 columns</p>\n</div>\n```\n:::\n:::\n\n\nE aqui termino com uma visualização simples dos 10 principais provedores de API\n\n::: {#fc7f5de3 .cell execution_count=5}\n``` {.python .cell-code}\ntop_providers = api_info['provider_name'].value_counts().head(10)\n\nplt.figure(figsize=(12, 6)).patch.set_facecolor('#fff8dc')\nax = sns.barplot(x=top_providers.index, y=top_providers.values, palette='viridis')\nplt.title('Top 10 Provedores - Número de Observações', fontsize=16, fontweight='bold')\nplt.xlabel('Provedor', fontsize=12)\nplt.ylabel('Número de Observações', fontsize=12)\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\n\n# Adiciona os valores no topo das barras\nfor i, bar in enumerate(ax.patches):\n    plt.text(bar.get_x() + bar.get_width()/2, bar.get_height() + 0.5, \n             str(top_providers.values[i]), ha='center', va='bottom')\n\n# Adiciona grade para facilitar a leitura\nplt.grid(axis='y', alpha=0.3)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\Victor\\AppData\\Local\\Temp\\ipykernel_18832\\3101477823.py:4: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  ax = sns.barplot(x=top_providers.index, y=top_providers.values, palette='viridis')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-2.png){}\n:::\n:::\n\n\nTrabalhar com Python tem sido interessante como alguém que saiu da vida acadêmica e por isso está bastante acostumado com R. Hoje eu perdi um bom tempo em reaprender como fazer contagens por categoria (usando tanto `value_counts()` como `group_by()`). Isso não por falta de conhecimento dessas funções, mas por confusão com as funções do R que fazem a mesma coisa mais com configurações diferentes.\n\nDe toda forma, essa é mais um resulado bem legal que gostaria de compartilhar.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}